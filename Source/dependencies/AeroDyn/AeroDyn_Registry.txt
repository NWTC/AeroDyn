###################################################################################################################################
# Registry for AeroDyn 15 in the FAST Modularization Framework
# This Registry file is used to create AeroDyn_Types which contains data used in the AeroDyn module.
# It also contains copy, destroy, pack, and unpack routines associated with each defined data types.
# See the NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword>	<ModuleName/ModName>	<TypeName>	<FieldType>	<FieldName>	<Dims>	<IO>	<DNAME>	<DESCRIP>	<UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################
# File last committed $Date$
# (File) Revision #: $Rev$
# URL: $HeadURL$
###################################################################################################################################
# ...... Include files (definitions from NWTC Library) ............................................................................
include	Registry_NWTC_Library.txt
usefrom	AirfoilInfo_Registry.txt
usefrom	BEMT_Registry.txt
usefrom	UnsteadyAero_Registry.txt

# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
typedef	AeroDyn/AD	InitInputType	CHARACTER(1024)	InputFile	-	-	-	"Name of the input file"	-
typedef	^	InitInputType	IntKi	NumBl	-	-	-	"Number of blades on the turbine"
typedef	^	InitInputType	CHARACTER(1024)	RootName	-	-	-	"RootName for writing output files"	-

# Define outputs from the initialization routine here:
typedef	^	InitOutputType	CHARACTER(ChanLen)	WriteOutputHdr	{:}	-	-	"Names of the output-to-file channels"	-
typedef	^	InitOutputType	CHARACTER(ChanLen)	WriteOutputUnt	{:}	-	-	"Units of the output-to-file channels"	-
typedef	^	InitOutputType	ProgDesc	Ver	-	-	-	"This module's name, version, and date"	-


# ..... Input file data ...........................................................................................................
# This is data defined in the Input File for this module (or could otherwise be passed in)
# ..... Blade Input file data .....................................................................................................
typedef	^	AD_BladePropsType	ReKi	BlSpn	{:}	-	-	"Span at blade node"	m
typedef	^	AD_BladePropsType	ReKi	BlCrvAC	{:}	-	-	"Curve at blade node"	m
typedef	^	AD_BladePropsType	ReKi	BlSwpAC	{:}	-	-	"Sweep at blade node"	m
typedef	^	AD_BladePropsType	ReKi	BlCrvAng	{:}	-	-	"Curve angle at blade node"	radians
typedef	^	AD_BladePropsType	ReKi	BlTwist	{:}	-	-	"Twist at blade node"	radians
typedef	^	AD_BladePropsType	ReKi	BlChord	{:}	-	-	"Chord at blade node"	m
typedef	^	AD_BladePropsType	IntKi	BlAFID	{:}	-	-	"ID of Airfoil at blade node"	-

# ..... Primary Input file data ...................................................................................................
typedef	^	AD_InputFile	LOGICAL	Echo	-	-	-	"Echo the input to "<rootname>.AD.ech"?"	flag
typedef	^	AD_InputFile	DbKi	DTAero	-	-	-	"Time interval for aerodynamic calculations {or "default"}"	s
typedef	^	AD_InputFile	IntKi	WakeMod	-	-	-	"Type of wake/induction model {0=none, 1=BEMT}"	-
typedef	^	AD_InputFile	IntKi	AFAeroBladeMod	-	-	-	"Type of blade airfoil aerodynamics model {1=steady model, 2=Beddoes-Leishman unsteady model}"	-
typedef	^	AD_InputFile	IntKi	AFAeroTwrMod	-	-	-	"Type of tower airfoil aerodynamics model {1=steady model, 2=Beddoes-Leishman unsteady model}"	-
typedef	^	AD_InputFile	LOGICAL	TwrPotent	-	-	-	"Calculate tower influence on wind based on potential flow around the tower?"	flag
typedef	^	AD_InputFile	LOGICAL	TwrShadow	-	-	-	"Calculate downstream tower shadow?"	flag
typedef	^	AD_InputFile	LOGICAL	TwrAero	-	-	-	"Calculate tower aerodynamic loads?"	flag
typedef	^	AD_InputFile	ReKi	AirDens	-	-	-	"Air density"	kg/m^3
typedef	^	AD_InputFile	ReKi	KinVisc	-	-	-	"Kinematic air viscosity"	m^2/s
typedef	^	AD_InputFile	ReKi	SpdSound	-	-	-	"Speed of sound"	m/s
typedef	^	AD_InputFile	IntKi	SkewMod	-	-	-	"Type of skewed-wake correction model {1=uncoupled, 2=Pitt/Peters, 3=coupled} [used only when WakeMod=1]"	-
typedef	^	AD_InputFile	LOGICAL	TipLoss	-	-	-	"Use the Prandtl tip-loss model? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	HubLoss	-	-	-	"Use the Prandtl hub-loss model? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	TanInd	-	-	-	"Include tangential induction in BEMT calculations? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	AIDrag	-	-	-	"Include the drag term in the axial-induction calculation? [used only when WakeMod=1]"	flag
typedef	^	AD_InputFile	LOGICAL	TIDrag	-	-	-	"Include the drag term in the tangential-induction calculation? [used only when WakeMod=1 and TanInd=TRUE]"	flag
typedef	^	AD_InputFile	ReKi	IndToler	-	-	-	"Convergence tolerance for BEM induction factors [used only when WakeMod=1]"	-
typedef	^	AD_InputFile	ReKi	MaxIter	-	-	-	"Maximum number of iteration steps [used only when WakeMod=1]"	-
typedef	^	AD_InputFile	ReKi	DSMod	-	-	-	"Unsteady Aero Model Switch (switch) {1=Baseline model (Original), 2=Gonzalez's variant (changes in Cn,Cc,Cm), 3=Minemma/Pierce variant (changes in Cc and Cm)} [used only when AFAreoMod=2]"	-
typedef	^	AD_InputFile	LOGICAL	FLookup	-	-	-	"Flag to indicate whether a lookup for f' will be calculated (TRUE) or whether best-fit exponential equations will be used (FALSE); if FALSE S1-S4 must be provided in airfoil input files [used only when AFAreoMod=2]"	flag
typedef	^	AD_InputFile	ReKi	InCol_Alfa	-	-	-	"The column in the airfoil tables that contains the angle of attack"	-
typedef	^	AD_InputFile	ReKi	InCol_Cl	-	-	-	"The column in the airfoil tables that contains the lift coefficient"	-
typedef	^	AD_InputFile	ReKi	InCol_Cd	-	-	-	"The column in the airfoil tables that contains the drag coefficient"	-
typedef	^	AD_InputFile	ReKi	InCol_Cm	-	-	-	"The column in the airfoil tables that contains the pitching-moment coefficient; use zero if there is no Cm column"	-
typedef	^	AD_InputFile	ReKi	InCol_Cpmin	-	-	-	"The column in the airfoil tables that contains the drag coefficient; use zero if there is no Cpmin column"	-
typedef	^	AD_InputFile	IntKi	NumAFfiles	-	-	-	"Number of airfoil files used"	-
typedef	^	AD_InputFile	CHARACTER(1024)	AFNames	{:}	-	-	"Airfoil file names (NumAF lines)"	"quoted strings"
typedef	^	AD_InputFile	LOGICAL	UseBlCm	-	-	-	"Include aerodynamic pitching moment in calculations?"	flag
typedef	^	AD_InputFile	IntKi	NumBlNds	-	-	-	"Number of blade nodes used in the analysis"	-
typedef	^	AD_InputFile	AD_BladePropsType	BladeProps	{:}	-	-	"blade property information from blade input files"	-
typedef	^	AD_InputFile	ReKi	TwrWakeCnst	-	-	-	"Tower wake constant {0.0 - full potential flow, 0.1 - Bak model} [used only when TwrPotent=True]"	-
typedef	^	AD_InputFile	LOGICAL	TwrUseCm	-	-	-	"Include aerodynamic pitching moment in tower aerodynamic load calculations? [used only when TwrAero=True]"	flag
typedef	^	AD_InputFile	IntKi	NumTwrNds	-	-	-	"Number of tower nodes used in the analysis"	-
typedef	^	AD_InputFile	ReKi	TwrElev	{:}	-	-	"Elevation at tower node"	m
typedef	^	AD_InputFile	ReKi	TwrTwist	{:}	-	-	"Twist at tower node"	radians
typedef	^	AD_InputFile	ReKi	TwrChord	{:}	-	-	"Chord at tower node"	m
typedef	^	AD_InputFile	IntKi	TwrAFID	{:}	-	-	"ID of Airfoil at tower node"	-
typedef	^	AD_InputFile	LOGICAL	SumPrint	-	-	-	"Generate a summary file listing input options and interpolated properties to "<rootname>.AD.sum"?"	flag
typedef	^	AD_InputFile	IntKi	NBlOuts	-	-	-	"Number of blade node outputs [0 - 9]"	-
typedef	^	AD_InputFile	IntKi	BlOutNd	{9}	-	-	"Blade nodes whose values will be output"	-
typedef	^	AD_InputFile	IntKi	NTwOuts	-	-	-	"Number of tower node outputs [0 - 9]"	-
typedef	^	AD_InputFile	IntKi	TwOutNd	{9}	-	-	"Tower nodes whose values will be output"	-
typedef	^	AD_InputFile	IntKi	NumOuts	-	-	-	"Number of parameters in the output list (number of outputs requested)"	-
typedef	^	AD_InputFile	CHARACTER(ChanLen)	OutList	{:}	-	-	"List of user-requested output channels"	-

# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
typedef	^	ContinuousStateType	BEMT_ContinuousStateType	BEMT	-	-	-	"Continuous states from the BEMT module"	-

# Define discrete (nondifferentiable) states here:
typedef	^	DiscreteStateType	BEMT_DiscreteStateType	BEMT	-	-	-	"Discrete states from the BEMT module"	-

# Define constraint states here:
typedef	^	ConstraintStateType	BEMT_ConstraintStateType	BEMT	-	-	-	"Constraint states from the BEMT module"	-

# Define "other" states (any data that are not considered actual states) here:
typedef	^	OtherStateType	BEMT_OtherStateType	BEMT	-	-	-	"OtherStates from the BEMT module"	-
typedef	^	OtherStateType	BEMT_OutputType	BEMT_y	-	-	-	"Outputs from the BEMT module"	-
typedef	^	OtherStateType	BEMT_InputType	BEMT_u	-	-	-	"Inputs to the BEMT module"	-




# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef	^	ParameterType	DbKi	DT	-	-	-	"Time step for continuous state integration & discrete state update"	seconds
typedef	^	ParameterType	AFI_ParameterType	AFI_Params	-	-	-	"AirfoilInfo parameters"
typedef	^	ParameterType	IntKi	NumBl	-	-	-	"Number of blades on the turbine"
typedef	^	ParameterType	BEMT_ParameterType	BEMT	-	-	-	"Parameters for BEMT module"



# parameters for output
typedef	^	ParameterType	IntKi	NumOuts	-	-	-	"Number of parameters in the output list (number of outputs requested)"	-
typedef	^	ParameterType	CHARACTER(1024)	RootName	-	-	-	"RootName for writing output files"	-
typedef	^	ParameterType	OutParmType	OutParam	{:}	-	-	"Names and units (and other characteristics) of all requested output parameters"	-


# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:
#typedef	^	InputType	MeshType	MeshedInput	-	-	-	"Meshed input data"	-
# Define inputs that are not on this mesh here:



# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
#typedef	^	OutputType	MeshType	MeshedOutput	-	-	-	"Meshed output data"	-
# Define outputs that are not on this mesh here:
typedef	^	OutputType	ReKi	WriteOutput	{:}	-	-	"Data to be written to an output file: see WriteOutputHdr for names of each variable"	"see WriteOutputUnt"


###########################################################################################
# DATA THAT GREG WAS USING BEFORE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
###########################################################################################





#
#
# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
#   e.g.,  the name of the input file,  the file root name,etc.
#
typedef   AeroDyn/AD                   InitInputType                 DbKi                     DT                              -          -         -        "time step" s
typedef   ^                            ^                             ReKi                     chord                           {:}{:}     -         -        "Chord length at node" m
typedef   ^                            ^                             INTEGER                  numBlades                       -          -         -        "Number of blades"    -
typedef   ^                            ^                             ReKi                     airDens                         -          -         -        "Air density"        kg/m^3
typedef   ^                            ^                             ReKi                     kinVisc                         -          -         -        "Kinematic air viscosity"       m^2/s
typedef   ^                            ^                             INTEGER                  skewWakeMod                     -          -         -        "Skewed-wake correction model [switch] {0: no correction, 1: Pitt and Peters, 2: Teknikgruppen AB, 3: Coupled model}"  -
typedef   ^                            ^                             LOGICAL                  useTipLoss                      -          -         -        "Use the Prandtl tip-loss model?  [flag]"        -
typedef   ^                            ^                             LOGICAL                  useHubLoss                      -          -         -        "Use the Prandtl hub-loss model?  [flag]"        -
typedef   ^                            ^                             LOGICAL                  useInduction                    -          -         -        "Include induction in BEM calculations [flag] { If FALSE then useTanInd will be set to FALSE}"        -
typedef   ^                            ^                             LOGICAL                  useTanInd                       -          -         -        "Include tangential induction in BEM calculations [flag]"        -
typedef   ^                            ^                             LOGICAL                  useAIDrag                       -          -         -        "Include the drag term in the axial-induction calculation?  [flag]"        -
typedef   ^                            ^                             LOGICAL                  useTIDrag                       -          -         -        "Include the drag term in the tangential-induction calculation?  Ignored if TanInd is False.  [flag]"        -
typedef   ^                            ^                             INTEGER                  numBladeNodes                   -          -         -        "Number of blade nodes used in the analysis"        -
typedef   ^                            ^                             INTEGER                  numReIterations                 -          -         -        "Number of iterations for finding the Reynolds number"        -
typedef   ^                            ^                             INTEGER                  maxIndIterations                -          -         -        "Maximum number of iterations of induction factor solve"        -
typedef   ^                            ^                             INTEGER                  AFindx                          {:}        -         -        "Index of airfoil data file for blade node location [array of numBladeNodes]"        -
typedef   ^                            ^                             ReKi                     zHub                            {:}        -         -        "Distance to hub for each blade" m
typedef   ^                            ^                             ReKi                     zLocal                          {:}{:}     -         -        "Distance to blade node, measured along the blade" m
typedef   ^                            ^                             ReKi                     zTip                            {:}        -         -        "Distance to blade tip, measured along the blade" m
typedef   ^                            ^                             AFInfoType               AFInfo                          {:}        -         -        "Parameters for the airfoils"
typedef   ^                            ^                             INTEGER                  NumAF                           -          -         -        "Parameters for the BEMT module"
typedef   ^                            ^                             CHARACTER(1024)          AF_File                         {:}        -         -        "Parameters for the BEMT module"
typedef   ^                            ^                             BEMT_InitInputType       BEMT                            -          -         -        "Parameters for the BEMT module"
typedef   ^                            ^                             INTEGER                  BEMT_SkewWakeMod                -          -         -        "The BEMT module skewed wake model, set to 0 if BEMT is not being used" -
#
#
# Define outputs from the initialization routine here:
#
typedef   ^                            InitOutputType                ProgDesc                 Version                          -          -        -         ""    -
# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
#
typedef   ^                            ParameterType                 ReKi                     chord                           {:}{:}     -         -        "Chord length at node" m
typedef   ^                            ^                             INTEGER                  numBlades                       -          -         -        "Number of blades"    -
typedef   ^                            ^                             ReKi                     airDens                         -          -         -        "Air density"        kg/m^3
typedef   ^                            ^                             ReKi                     kinVisc                         -          -         -        "Kinematic air viscosity"       m^2/s
typedef   ^                            ^                             INTEGER                  skewWakeMod                     -          -         -        "Skewed-wake correction model [switch] {0: no correction, 1: Pitt and Peters, 2: Teknikgruppen AB, 3: Coupled model}"  -
typedef   ^                            ^                             LOGICAL                  useTipLoss                      -          -         -        "Use the Prandtl tip-loss model?  [flag]"        -
typedef   ^                            ^                             LOGICAL                  useHubLoss                      -          -         -        "Use the Prandtl hub-loss model?  [flag]"        -
typedef   ^                            ^                             LOGICAL                  useTanInd                       -          -         -        "Include tangential induction in BEM calculations [flag]"        -
typedef   ^                            ^                             LOGICAL                  useAIDrag                          -          -         -        "Include the drag term in the axial-induction calculation?  [flag]"        -
typedef   ^                            ^                             LOGICAL                  useTIDrag                          -          -         -        "Include the drag term in the tangential-induction calculation?  Ignored if TanInd is False.  [flag]"        -
typedef   ^                            ^                             INTEGER                  numBladeNodes                   -          -         -        "Number of blade nodes used in the analysis"        -
typedef   ^                            ^                             INTEGER                  numReIterations                 -          -         -        "Number of iterations for finding the Reynolds number"        -
typedef   ^                            ^                             INTEGER                  maxIndIterations                -          -         -        "Maximum number of iterations of induction factor solve"        -
typedef   ^                            ^                             INTEGER                  AFindx                          {:}        -         -        "Index of airfoil data file for blade node location [array of numBladeNodes]"        -
typedef   ^                            ^                             ReKi                     tipLossConst                    {:}{:}     -         -        "A constant computed during initialization based on B*(zTip-zLocal)/(2*zLocal)" -
typedef   ^                            ^                             ReKi                     hubLossConst                    {:}{:}     -         -        "A constant computed during initialization based on B*(zLocal-zHub)/(2*zHub)" -
typedef   ^                            ^                             AFInfoType               AFInfo                          {:}        -         -        "Parameters for the airfoils"
typedef   ^                            ^                             INTEGER                  NumAF                           -          -         -        "Parameters for the BEMT module"
typedef   ^                            ^                             CHARACTER(1024)          AF_File                         {:}          -         -        "Parameters for the BEMT module"
#typedef   ^                            ^                             AFI_ParameterType        AFI_Params                      -          -         -         "" -
#typedef   ^                            ^                             INTEGER                  BEMT_SkewWakeMod                -          -         -        "The BEMT module skewed wake model, set to 0 if BEMT is not being used" -
#

#
# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:
#
typedef   ^                            InputType                     ReKi                     theta                           {:}{:}    -         -         "Twist angle (includes all sources of twist)  [Array of size (numBlades, NumBlNds)]" rad
typedef   ^                            ^                             ReKi                     gamma                           -         -         -         "Yaw angle" rad
typedef   ^                            ^                             ReKi                     psi                             {:}       -         -         "Azimuth angle" rad
typedef   ^                            ^                             ReKi                     omega                           -         -         -         "Angular velocity of rotor" rad/s
typedef   ^                            ^                             ReKi                     Vx                              {:}{:}    -         -         "Local axial velocity at node" m/s
typedef   ^                            ^                             ReKi                     Vy                              {:}{:}    -         -         "Local tangential velocity at node" m/s
typedef   ^                            ^                             ReKi                     Vinf                            {:}{:}    -         -         "Local freestream velocity at node" m/s
typedef   ^                            ^                             ReKi                     lambda                          -         -         -         "Average tip speed ratio for rotor disk" -
typedef   ^                            ^                             ReKi                     rTip                            {:}       -         -         "Radial distance from center-of-rotation to blade tip" m
typedef   ^                            ^                             ReKi                     rLocal                          {:}{:}    -         -         "Radial distance from center-of-rotation to node" m
#
# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
typedef   ^                            OutputType                    ReKi                     inducedVel                      {:}{:}    -         -         "Total local induced velocity" m/s
typedef   ^                            ^                             ReKi                     phi                             {:}{:}    -         -         "angle between the plane of rotation and the direction of the local wind" rad
