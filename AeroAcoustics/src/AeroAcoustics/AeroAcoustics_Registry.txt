###################################################################################################################################
# Registry for AeroAcoustics module in the FAST Modularization Framework
# This Registry file is used to create AeroDyn_Types which contains data used in the AeroDyn module.
# It also contains copy, destroy, pack, and unpack routines associated with each defined data types.
# See the NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword>     <ModuleName/ModName>     <TypeName>     <FieldType>     <FieldName>     <Dims>     <IO>     <DNAME>     <DESCRIP>     <UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################
# File last committed $Date: 2016-03-14 12:13:10 -0600 (Mon, 14 Mar 2016) $
# (File) Revision #: $Rev: 201 $
# URL: $HeadURL: https://windsvn.nrel.gov/WT_Perf/branches/v4.x/Source/dependencies/AeroDyn/AeroDyn_Registry.txt $
###################################################################################################################################
# ...... Include files (definitions from NWTC Library) ............................................................................
include     Registry_NWTC_Library.txt
usefrom     AirfoilInfo_Registry.txt
#
# ..... Input file data ...........................................................................................................
# This is data defined in the Input File for this module (or could otherwise be passed in)
# ..... Blade Input file data .....................................................................................................
typedef     AeroAcoustics/AA    AA_BladePropsType    IntKi               NumBlNds         -     -     -     "Number of blade nodes used in the analysis"     -
typedef     ^                   AA_BladePropsType    ReKi                TEThick         {:}    -     -     ""     -
typedef     ^                   AA_BladePropsType    ReKi                TEAngle         {:}    -     -     ""     -
typedef     ^                   AA_BladePropsType    ReKi                AerCent         {:}    -     -     ""     -
#
# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
typedef     AeroAcoustics/AA    InitInputType        CHARACTER(1024)     InputFile        -     -     -     "Name of the input file"     -
typedef     ^                   InitInputType        IntKi               NumBlades        -     -     -     "Number of blades on the turbine"
typedef     ^                   InitInputType        IntKi               NumBlNds         -     -     -     "Number of blades on the turbine"
typedef     ^                   InitInputType        CHARACTER(1024)     RootName         -     -     -     "RootName for writing output files"     -
typedef     ^                   InitInputType        ReKi                BlSpn           {:}{:}    -     -     "Span at blade node"     m
typedef     ^                   InitInputType        ReKi                BlChord         {:}{:}    -     -     "Chord at blade node"     m
typedef     ^                   InitInputType        ReKi                AirDens          -     -     -     "Air density"     kg/m^3
typedef     ^                   InitInputType        ReKi                KinVisc          -     -     -     "Kinematic air viscosity"     m^2/s
typedef     ^                   InitInputType        ReKi                SpdSound         -     -     -     "Speed of sound"     m/s
typedef     ^                   InitInputType        IntKi               BlAFID          {:}{:} -     -     "Index of airfoil data file for blade node location [array of numBladeNodes by numBlades]"        -
typedef     ^                   InitInputType        AFInfoType          AFInfo          {:}     -     -      "Airfoil information structure containing the aerodynamic center and airfoil shape coordinates"

#
# Define outputs from the initialization routine here:
typedef     ^                   InitOutputType       CHARACTER(ChanLen)  WriteOutputHdr  {:}    -     -     "Names of the output-to-file channels"     -
typedef     ^                   InitOutputType       CHARACTER(ChanLen)  WriteOutputUnt  {:}    -     -     "Units of the output-to-file channels"     -
typedef     ^                   InitOutputType       ProgDesc            Ver              -     -     -     "This module's name, version, and date"     -
typedef     ^                   InitOutputType       ReKi                AirDens          -     -     -     "Air density"     kg/m^3
#

# ..... Primary Input file data ...................................................................................................
#typedef     ^                   AA_InputFile         DbKi                DTAero           -     -     -     "Time interval for aerodynamic calculations {or "default"}"     s
typedef     ^                   AA_InputFile         IntKi               IBLUNT           -     -     -     "FLAG TO COMPUTE BLUNTNESS NOISE"     -
typedef     ^                   AA_InputFile         IntKi               ILAM             -     -     -     "FLAG TO COMPUTE LBL NOISE {1=steady model, 2=Beddoes-Leishman unsteady model}"     -
typedef     ^                   AA_InputFile         IntKi               ITIP             -     -     -     "FLAG TO COMPUTE TIP NOISE {0=none, 1=baseline potential flow, 2=potential flow with Bak correction}"     -
typedef     ^                   AA_InputFile         IntKi               ITRIP            -     -     -     "FLAG TO TRIP BOUNDARY LAYER {0=none, 1=baseline potential flow, 2=potential flow with Bak correction}"     -
typedef     ^                   AA_InputFile         IntKi               ITURB            -     -     -     "FLAG TO COMPUTE TBLTE NOISE {0=none, 1=baseline potential flow, 2=potential flow with Bak correction}"     -
typedef     ^                   AA_InputFile         IntKi               IInflow          -     -     -     "FLAG TO COMPUTE Turbulent Inflow NOISE {0=none, 1=baseline potential flow, 2=potential flow with Bak correction}"     -
typedef     ^                   AA_InputFile         LOGICAL             ROUND            -     -     -     "LOGICAL INDICATING ROUNDED TIP"     -
typedef     ^                   AA_InputFile         ReKi                ALPRAT           -     -     -     "TIP LIFT CURVE SLOPE"     -
typedef     ^                   AA_InputFile         IntKi               OctBand          -     -     -     "Octave Bands"     -                                                  
typedef     ^                   AA_InputFile         IntKi               NrObsLoc         -     -     -     "Number of observer locations "     -
typedef     ^                   AA_InputFile         ReKi                ObsX            {:}    -     -     "Observer location in tower-base coordinate X horizontal"     m
typedef     ^                   AA_InputFile         ReKi                ObsY            {:}    -     -     "Observer location in tower-base coordinate Y lateral"          m
typedef     ^                   AA_InputFile         ReKi                ObsZ            {:}    -     -     "Observer location in tower-base coordinate Z vertical"          m
typedef     ^                   AA_InputFile         AA_BladePropsType   BladeProps      {:}    -     -     "blade property information from blade input files"     -
typedef     ^                   AA_InputFile         LOGICAL             SumPrint         -     -     -     "Generate a summary file listing input options and interpolated properties to "<rootname>.AD.sum"?"     flag
typedef     ^                   AA_InputFile         CHARACTER(ChanLen)  OutList         {:}    -     -     "List of user-requested output channels"     -
typedef     ^                   AA_InputFile         IntKi               NumOuts          -     -     -     "Number of parameters in the output list (number of outputs requested)"     -
# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
#
typedef     ^                   ContinuousStateType  SiKi                DummyContState   -     -     -     "Remove this variable if you have continuous states"        -
#
# Define discrete (nondifferentiable) states here:
typedef     ^                   DiscreteStateType    ReKi                MeanVrel        {:}{:} -     -     "Vrel Cumu. Mean"        -
typedef     ^                   DiscreteStateType    ReKi                VrelSq          {:}{:} -     -     "Vrel Squared Store"        -
typedef     ^                   DiscreteStateType    ReKi                TIVrel          {:}{:} -     -     "Vrel St. deviat"        -
#
# Define constraint states here:
typedef     ^                   ConstraintStateType  SiKi                DummyConstrState -     -     -     "Remove this variable if you have  states"        -
#                                                                                          
# Define "other" states here:                                                             
typedef     ^                   OtherStateType       SiKi                DummyOtherState  -     -     -     "Remove this variable if you have  states"        -
#
# Define misc/optimization variables (any data that are not considered actual states) here:
##typedef   ^                   MiscVarType          ReKi                DisturbedInflow        {:}{:}{:}     -     -     "InflowOnBlade values modified by tower influence"     m/s
typedef     ^                   MiscVarType          ReKi                WithoutSweepPitchTwist {:}{:}{:}{:}  -     -     "Coordinate system equivalent to BladeMotion Orientation, but without live sweep, blade-pitch, and twist angles"     -
typedef     ^                   MiscVarType          ReKi                AllOuts                {:}           -     -     "An array holding the value of all of the calculated (not only selected) output channels"     -
typedef     ^                   MiscVarType          ReKi                ChordAngleTE           {:}{:}{:}     -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SpanAngleTE            {:}{:}{:}     -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                ChordAngleLE           {:}{:}{:}     -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SpanAngleLE            {:}{:}{:}     -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                rTEtoObserve           {:}{:}{:}     -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                rLEtoObserve           {:}{:}{:}     -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                RotSpeedAoA             -            -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLLBL                 {:}           -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLP                   {:}           -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLS                   {:}           -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLALPH                {:}           -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLTBL                 {:}           -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLTIP                 {:}           -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLTI                  {:}           -     -     "C"     -
typedef     ^                   MiscVarType          ReKi                SPLBLUNT               {:}           -     -     "C"     -
# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef     ^                   ParameterType        DbKi                DT                      -      -     -     "Time step for continuous state integration & discrete state update"     seconds
typedef     ^                   ParameterType        IntKi               IBLUNT                  -      -     -     "FLAG TO COMPUTE BLUNTNESS NOISE "     -
typedef     ^                   ParameterType        IntKi               ILAM                    -      -     -     "FLAG TO COMPUTE LBL NOISE "     -
typedef     ^                   ParameterType        IntKi               ITIP                    -      -     -     "FLAG TO COMPUTE TIP NOISE "     -
typedef     ^                   ParameterType        IntKi               ITRIP                   -      -     -     "FLAG TO TRIP BOUNDARY LAYER"     -
typedef     ^                   ParameterType        IntKi               ITURB                   -      -     -     "FLAG TO COMPUTE TBLTE NOISE"     -
typedef     ^                   ParameterType        IntKi               IInflow                 -      -     -     "FLAG TO COMPUTE Turbulent Inflow NOISE"     -
typedef     ^                   ParameterType        LOGICAL             ROUND                   -      -     -     "LOGICAL INDICATING ROUNDED TIP"     -
typedef     ^                   ParameterType        ReKi                ALPRAT                  -      -     -     "TIP LIFT CURVE SLOPE"     -
typedef     ^                   ParameterType        IntKi               OctBand                 -      -     -     "Octave Bands"     -
typedef     ^                   ParameterType        IntKi               NumBlades               -      -     -     "Number of blades on the turbine"     -
typedef     ^                   ParameterType        IntKi               NumBlNds                -      -     -     "Number of nodes on each blade"     -
typedef     ^                   ParameterType        ReKi                AirDens                 -      -     -     "Air density"     kg/m^3
typedef     ^                   ParameterType        ReKi                KinVisc                 -      -     -     "Kinematic air viscosity"     m^2/s
typedef     ^                   ParameterType        ReKi                SpdSound                -      -     -     "Speed of sound"     m/s
typedef     ^                   ParameterType        IntKi               NrObsLoc                -      -     -     "Number of observer locations "     -
typedef     ^                   ParameterType        ReKi                ObsX                   {:}     -     -     "Observer location in tower-base coordinate X horizontal"     m
typedef     ^                   ParameterType        ReKi                ObsY                   {:}     -     -     "Observer location in tower-base coordinate Y lateral"          m
typedef     ^                   ParameterType        ReKi                ObsZ                   {:}     -     -     "Observer location in tower-base coordinate Z vertical"          m
typedef     ^                   ParameterType        ReKi                FreqList               {:}     -     -     "List of Frequencies to Calculate"     Hz

# parameters for output
typedef     ^                   ParameterType        IntKi               NumOuts                 -      -     -     "Number of parameters in the output list (number of outputs requested)"     -
typedef     ^                   ParameterType        CHARACTER(1024)     RootName                -      -     -     "RootName for writing output files"     -
typedef     ^                   ParameterType        OutParmType         OutParam               {:}     -     -     "Names and units (and other characteristics) of all requested output parameters"     -
typedef     ^                   ParameterType        ReKi                TEThick                {:}{:}  -     -     "ation"     -
typedef     ^                   ParameterType        ReKi                TEAngle                {:}{:}  -     -     "ation"     -
typedef     ^                   ParameterType        ReKi                AerCent                {:}{:}{:}   -     -     "ation"     -
typedef     ^                   ParameterType        IntKi               BlAFID                 {:}{:} -     -     "Index of airfoil data file for blade node location [array of numBladeNodes by numBlades]"        -
typedef     ^                   ParameterType        AFInfoType          AFInfo                 {:}     -     -      "Airfoil information structure containing the aerodynamic center and airfoil shape coordinates"
typedef     ^                   ParameterType        ReKi                AFLECo                 {:}{:}{:}  -     -     "Dimensionalized "
typedef     ^                   ParameterType        ReKi                AFTECo                 {:}{:}{:}  -     - 
typedef     ^                   ParameterType        ReKi                BlSpn                  {:}{:}  -     -     "Span at blade node"     m
typedef     ^                   ParameterType        ReKi                BlChord                {:}{:}  -     -     "Chord at blade node"     m


# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:

typedef     ^                   InputType            ReKi                RotLtoG     {:}{:}{:}{:}     -     -     "3x3 rotation matrix transform a vector from the local airfoil coordinate system to the global inertial coordinate system"     -
typedef     ^                   InputType            ReKi                AeroCent_G  {:}{:}{:}     -     -     "location in global coordinates of the blade element aerodynamic center.  1st index = vector components, 2nd index = blade node, 3rd index = blade"     -
typedef     ^                   InputType            ReKi                Vrel        {:}{:}        -     -     "Vrel"     -
typedef     ^                   InputType            ReKi                AoANoise    {:}{:}        -     -     "Angle of attack"     -

# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
typedef     ^                   OutputType           ReKi                SumSpecNoise   {:}{:}     -     -     "Spectra of summed noise level of all blades and blade nodes for each receiver and frequency"     SPL
# Define outputs that are not on this mesh here:
typedef     ^                   OutputType           ReKi                WriteOutput    {:}        -     -     "Data to be written to an output file: see WriteOutputHdr for names of each variable"     "see WriteOutputUnt"
